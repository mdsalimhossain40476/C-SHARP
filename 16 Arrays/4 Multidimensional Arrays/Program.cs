using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MultidimensionalArrays
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /*
                C# Multidimensional Arrays
                পূর্বের অধ্যায়ে, আপনি অ্যারে সম্পর্কে শিখেছেন, যা এক মাত্রিক অ্যারে হিসেবেও পরিচিত। 
                এগুলি দুর্দান্ত এবং C#-এ প্রোগ্রামিং করার সময় আপনি এগুলি প্রচুর ব্যবহার করবেন। 
                যাইহোক, যদি আপনি একটি সারণী ফর্মে ডেটা সংরক্ষণ করতে চান, যেমন সারি এবং
                কলাম সহ একটি টেবিল, তাহলে আপনাকে মাল্টিডাইমেনশনাল অ্যারে সম্পর্কে জানতে হবে।
                
                একটি বহুমাত্রিক অ্যারে মূলত অ্যারেগুলির একটি অ্যারে।

                অ্যারেতে যেকোন সংখ্যক মাত্রা থাকতে পারে। সবচেয়ে সাধারন হল দ্বিমাত্রিক অ্যারে (2D)।


                Two-Dimensional Arrays
                একটি 2D অ্যারে তৈরি করতে, প্রতিটি অ্যারে [ ] কার্লি ব্রেসের নিজস্ব সেটের মধ্যে যুক্ত করুন, এবং [ ] স্কোয়ার ব্র্যাকেটের মধ্যে একটি কমা (,) প্রবেশ করান:

                int[,] numbers = { {1, 4, 2}, {3, 6, 8} };

                জানা ভালো: একক কমা [,] নির্দিষ্ট করে যে অ্যারেটি two-dimensional । three-dimensional array তে দুটি কমা থাকবে: int[,,]।

                সংখ্যাগুলি এখন একটি অ্যারে যার উপাদান হিসেবে দুটি অ্যারে আছে। প্রথম অ্যারে উপাদানটিতে তিনটি উপাদান আছে:
                ১, ৪ এবং ২, যখন দ্বিতীয় অ্যারে উপাদানটিতে ৩, ৬ এবং ৮ আছে। এটিকে দৃশ্যমান করার জন্য অ্যারেটিকে সারি এবং কলাম সমন্বিত একটি টেবিল হিসেবে ভাবুন:


                        Column0     Column1     Column2   
                Row0        1           4           2
                Row1        3           6           8

                Access Elements of a 2D Array
                দ্বিমাত্রিক অ্যারে'র একটি উপাদান অ্যাক্সেস করতে, আপনাকে দুটি ইনডেক্স নির্দিষ্ট করতে হবে: একটি অ্যারের জন্য এবং একটি অ্যারের ভিতরের উপাদানের
                জন্য। অথবা আরও ভালভাবে, টেবিল ভিজুয়ালাইজেশন মনে রেখে; একটি সারির জন্য এবং একটি কলামের জন্য (নীচের উদাহরণটি দেখুন)।

                এই স্টেটমেন্টটি numbers অ্যারের প্রথম সারি (0) এবং তৃতীয় কলামের (2) উপাদানটি সরাসরি অ্যাক্সেস করে:

            */

            int[,] numbers = { { 1, 4, 2 }, { 3, 6, 8 } };
            Console.WriteLine(numbers[0, 2]);  // Outputs 2
            //   মনে রাখবেন যে: অ্যারে ইন্ডেক্স 0 থেকে শুরু হয়: [0] প্রথম উপাদান। [1] দ্বিতীয় উপাদান, ইত্যাদি।
            Console.WriteLine("======\n");
                    /*
                        Change Elements of a 2D Array
                        আপনি এছাড়াও একটি উপাদানের Value পরিবর্তন করতে পারেন।

                        নীচের উদাহরণটি প্রথম সারি (0) এবং প্রথম স্তম্ভে (0) উপাদানের মান পরিবর্তন করবে:
                   */
                    int[,] number = { { 1, 4, 2 }, { 3, 6, 8 } };
                    number[0, 0] = 5;  // Change value to 5
                    Console.WriteLine(number[0, 0]); // Outputs:	 5 
            Console.WriteLine("======\n");


            //   Loop Through a 2D Array
            //  একটি two - dimensional array / অ্যারের উপাদানগুলি আপনি সহজেই একটি foreach loop দিয়ে Loop করতে পারেন:
            int[,] numbers1 = { { 1, 4, 2 }, { 3, 6, 8 } };

            foreach (int i in numbers1)
            {
                Console.WriteLine(i);
            }   //   Output :	    1 	4 	2	 3	 6	 8
            Console.WriteLine("======\n");


                        //  আপনি একটি for লুপও ব্যবহার করতে পারেন। বহুমাত্রিক অ্যারের জন্য, আপনার of the array's dimensions / অ্যারের প্রতিটি মাত্রার জন্য একটি লুপ প্রয়োজন।

                        //  এছাড়াও লক্ষ্য রাখবেন যে, লুপটি কতবার চলবে তা নির্দিষ্ট করতে আমাদের Length এর পরিবর্তে GetLength() ব্যবহার করতে হবে:

                        int[,] numbers2 = { { 1, 4, 2 }, { 3, 6, 8 } };

                        for (int i = 0; i < numbers2.GetLength(0); i++)
                        {
                            for (int j = 0; j < numbers2.GetLength(1); j++)
                            {
                                Console.WriteLine(numbers2[i, j]);
                            }
                        }

            Console.ReadLine();
        }
    }
}
