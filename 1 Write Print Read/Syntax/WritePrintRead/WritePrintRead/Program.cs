using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WritePrintRead
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
            Console.ReadLine();  // প্রোগ্রামকে অপেক্ষা করার জন্য Console.ReadLine(); লিখতে হবে।
            /*
                উদাহরণ ব্যাখ্যা করা হলোঃ
               
               লাইন ১: System ব্যবহার করার অর্থ হলো আমরা System namespace থেকে ক্লাসগুলো ব্যবহার করতে পারি।
               
               লাইন ২: একটি খালি লাইন। সি# হোয়াইট স্পেসকে উপেক্ষা করে। যাইহোক, একাধিক লাইন কোডকে আরও পাঠযোগ্য করে তোলে।
               
               লাইন ৩: namespace আপনার কোডকে সংগঠিত করার জন্য ব্যবহৃত হয় এবং এটি ক্লাস এবং অন্যান্য নেমস্পেসের জন্য একটি কন্টেইনার।
               
               লাইন ৪: কার্লি ব্রেসেস {} কোডের একটি ব্লকের শুরু এবং শেষ চিহ্নিত করে।
               
               লাইন ৫:Class /  ক্লাস হলো ডেটা এবং পদ্ধতির জন্য একটি কন্টেইনার, যা আপনার প্রোগ্রামে কার্যকারিতা আনে। সি# এ চলা প্রতিটি লাইন কোডের অবশ্যই একটি ক্লাসের ভিতরে থাকতে হবে। আমাদের উদাহরণে, আমরা ক্লাসের নাম Program রেখেছি।
               
               
               লাইন ৭: সি# প্রোগ্রামে সবসময় উপস্থিত থাকা আরেকটি জিনিস হলো Main পদ্ধতি। এর কার্লি ব্রেসেস {} এর ভিতরে থাকা যেকোনো কোড কার্যকর করা হবে। আপনাকে Main এর আগে এবং পরে থাকা কীওয়ার্ডগুলো বুঝতে হবে 
               
               লাইন ৯: Console / কনসোল হলো System নেমস্পেসের একটি ক্লাস, যার একটি WriteLine() পদ্ধতি রয়েছে যা টেক্সট আউটপুট/প্রিন্ট করতে ব্যবহৃত হয়। আমাদের উদাহরণে, এটি "Hello World!" আউটপুট করবে।
               
               যদি আপনি using System লাইনটি বাদ দেন, তাহলে আপনাকে টেক্সট প্রিন্ট/আউটপুট করতে System.Console.WriteLine() লিখতে হবে।
               
               লাইন ১0: যদি আমরা চাই প্রোগ্রামটি অপেক্ষা করুক, তাহলে আমাদের নিচের স্ট্রাকচারটি ব্যবহার করতে হবে।
               .SystemConsole.ReadLine()
               
               নোট: প্রতিটি সি# স্টেটমেন্ট একটি সেমিকোলন দিয়ে শেষ হয় ;।
               
               নোট: সি# কেস-সেন্সিটিভ; "MyClass" এবং "myclass" এর বিভিন্ন অর্থ রয়েছে।
               
               নোট: জাভার মতো নয়, সি# ফাইলের নামটির অবশ্যই ক্লাসের নামের সাথে মেলাতে হবে না, তবে প্রায়ই তা করে (ভালো সংগঠনের জন্য)। ফাইলটি সংরক্ষণ করার সময়, একটি সঠিক নাম ব্যবহার করে সংরক্ষণ করুন এবং ফাইলনামের শেষে ".cs" যোগ করুন। 
               
             
             */
        }
    }
}
